# reset_players_data.py
import os
from dotenv import load_dotenv
from firebase_admin import credentials, initialize_app, db

load_dotenv()

# Inicializa Firebase
firebase_cred = credentials.Certificate("firebase_config.json")
initialize_app(firebase_cred, {'databaseURL': os.getenv("FIREBASE_DB_URL")})

print(
    "\nüîß Altera√ß√µes em larga escala:\n"
    "1. Adicionar ou alterar valor de um campo\n"
    "2. Excluir campo\n"
)
acao = input("Digite o n√∫mero da op√ß√£o desejada: ")

# Refer√™ncia raiz
root_ref = db.reference("/")
todos_os_players = root_ref.get()

if not todos_os_players:
    print("‚ö†Ô∏è Nenhum player encontrado no banco.")
    exit()
print(f"\nüéØ {len(todos_os_players)} jogadores ser√£o afetados.")

match acao:
    case "1" | "2":
        caminho = input("Caminho do campo (ex: Inventario/Moedas): ")
        valor_raw = input("Valor a ser atribu√≠do (int, str, bool): ")
        try:
            if valor_raw.isdigit():
                valor = int(valor_raw)
            elif valor_raw.lower() in ["true", "false"]:
                valor = valor_raw.lower() == "true"
            else:
                valor = valor_raw
        except:
            print("‚ùå Valor inv√°lido.")
            exit()
        for chat_id in todos_os_players:
            db.reference(f"{chat_id}/{caminho}").set(valor)
            print(f"‚úî {chat_id}: {caminho} = {valor}")
        print("\n‚úÖ Atualiza√ß√£o conclu√≠da.")

    case "2":
        caminho = input("Caminho do campo a ser exclu√≠do (ex: Inventario/Moedas): ")
        for chat_id in todos_os_players:
            db.reference(f"{chat_id}/{caminho}").delete()
            print(f"üóë {chat_id}: {caminho} exclu√≠do.")
        print("\n‚úÖ Campos removidos com sucesso.")

    case _:
        print("‚ùå Op√ß√£o inv√°lida ou ainda n√£o implementada.")
